//breakpoint;
alias physicalSP S0;
physicalSP=[PTBR+2*(SP/512)]*512+SP%512;
alias sysCallNo S1;
sysCallNo=[physicalSP-1];
if(sysCallNo==8) then
//breakpoint;
	alias counter S2;
	counter=0;
	alias freePCB S3;
	freePCB=-1;
	while(counter<32) do
		if([READY_LIST+counter*32+1]==0) then 
			freePCB=READY_LIST+counter*32;
			break;
		endif;
		counter=counter+1;
	endwhile;
	
	if(freePCB==-1) then 
		[physicalSP-2]=-1;
		ireturn;
	endif;
	
	//breakpoint;
	
	[freePCB]=counter;
	alias pagecount S4;
	pagecount=0;
	S5=0;
	while(S5<4) do
		if([PTBR+2*S5+1]=="01" || [PTBR+2*S5+1]=="11") then
			pagecount=pagecount+1;
		endif;
		S5=S5+1;
	endwhile;
	
	alias framecount S6;
	framecount=0;
	S5=25;
	while(S5<64) do
		if([1280+S5]==0) then
			framecount=framecount+1;
		endif;
		S5=S5+1;
	endwhile;
	
	if(framecount<pagecount) then
		[physicalSP-2]=-1;
		ireturn;
	endif;
	S7=0;
	alias parentpage S7;
	alias child_PTBR S8;
	child_PTBR=1024+8*[freePCB];
	//breakpoint;
	
	while(pagecount>0) do
		S5=25;
		alias freepage S5;
		while(S5<64) do
			if([1280+S5]==0) then
				break;
			endif;
			S5=S5+1;
		endwhile;
		[1280+S5]=1;
		
		//breakpoint;
		
		while(S7<4) do
			if([PTBR+2*S7+1]=="01" || [PTBR+2*S7+1]=="11") then
				break;
			endif;
			S7=S7+1;
		endwhile;
		//load(1,[PTBR+2*parentpage]);
		//store(1,freepage);
		S13=0;
		while(S13<512) do
			S14=[[PTBR+2*parentpage]*512+S13];
			[freepage*512+S13]=S14;
			S13=S13+1;
		endwhile;
		[child_PTBR+2*parentpage]=freepage;
		[child_PTBR+2*parentpage+1]=[PTBR+2*parentpage+1];
		
		pagecount=pagecount-1;
		parentpage=parentpage+1;
	endwhile;
	
	//breakpoint;
	
	[freePCB+2]=BP;
	[freePCB+3]=SP-1;
	[freePCB+4]=[physicalSP];
	[freePCB+5]=child_PTBR;
	[freePCB+6]=PTLR;
	
	[freePCB+7]=R0;
	[freePCB+8]=R1;
	[freePCB+9]=R2;
	[freePCB+10]=R3;
	[freePCB+11]=R4;
	[freePCB+12]=R5;
	[freePCB+13]=R6;
	[freePCB+14]=R7;
	//breakpoint;
	
	alias pid S9;
	pid=(PTBR-1024)/8;
	
	[freePCB+31]=pid; //ppid
		
	S10=0;
	while(S10<8) do
		[freePCB+15+2*S10]=[READY_LIST+32*pid+15+2*S10];
		[freePCB+15+2*S10+1]=[READY_LIST+32*pid+15+2*S10+1];
		S12=[freePCB+15+2*S10];
		if(S12>=0 && S12<64) then
			[FILE_TABLE+2*S12+1]=[FILE_TABLE+2*S12+1]+1;
		endif;
		S10=S10+1;
	endwhile;
	
	[freePCB+1]=1;
	
	
	[physicalSP-2]=[freePCB];
	
	alias child_physicalSP S11;
	child_physicalSP=[child_PTBR+2*(SP-1)/512]*512+(SP-1)%512;
	[child_physicalSP-1]=-2;
	//breakpoint;
	ireturn;
endif;
