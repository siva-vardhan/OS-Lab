//breakpoint;
alias physicalSP S0;
physicalSP=[PTBR+2*(SP/512)]*512+SP%512;
alias sysCallNo S1;
sysCallNo=[physicalSP-1];
if(sysCallNo==8) then
//breakpoint;
	alias counter S2;
	counter=0;
	alias freePCB S3;
	freePCB=-1;
	while(counter<32) do
		if([READY_LIST+counter*32+1]==0) then 
			freePCB=READY_LIST+counter*32;
			break;
		endif;
		counter=counter+1;
	endwhile;
	
	if(freePCB==-1) then 
		[physicalSP-2]=-1;
		ireturn;
	endif;
	
	//breakpoint;
	
	[freePCB]=counter;
	
	
	counter=0;
	while(counter<64) do
		if([1280+counter]==0) then
			[1280+counter]=1;
			break;
		endif;
		counter=counter+1;
	endwhile;
	if(counter==64) then
		[physicalSP-2]=-1;
		ireturn;	
	endif;
	alias parent_stack S4;
	parent_stack=[PTBR+6];
	alias child_stack S5;
	child_stack=counter;
	counter=0;
	while(counter<512) do
		[child_stack*512+counter]=[parent_stack*512+counter];
		counter=counter+1;
	endwhile;
	
	alias child_PTBR S6;
	child_PTBR=1024+[freePCB]*8;
	[child_PTBR+6]=child_stack;
	[child_PTBR+7]="01";
	
	counter=0;
	while(counter<3) do
		[child_PTBR+2*counter]=[PTBR+2*counter];
		[child_PTBR+2*counter+1]=[PTBR+2*counter+1];
		if([child_PTBR+2*counter+1]=="01" || [child_PTBR+2*counter+1]=="11") then
			[1280+[child_PTBR+2*counter]]=[1280+[child_PTBR+2*counter]]+1;
		else
			alias page S7;
			page=[child_PTBR+2*counter];
			if(page>=448) then
				[6*512+page]=[6*512+page]+1;
				store(6,20);
			endif;
		endif;
		counter=counter+1;
	endwhile;
	
	//breakpoint;
	
	[freePCB+2]=BP;
	[freePCB+3]=SP-1;
	[freePCB+4]=[physicalSP];
	[freePCB+5]=child_PTBR;
	[freePCB+6]=PTLR;
	
	[freePCB+7]=R0;
	[freePCB+8]=R1;
	[freePCB+9]=R2;
	[freePCB+10]=R3;
	[freePCB+11]=R4;
	[freePCB+12]=R5;
	[freePCB+13]=R6;
	[freePCB+14]=R7;
	
	//breakpoint;
	
	alias pid S9;
	pid=(PTBR-1024)/8;
	[freePCB+31]=pid;  //ppid
	S10=0;
	while(S10<8) do
		[freePCB+15+2*S10]=[READY_LIST+32*pid+15+2*S10];
		[freePCB+15+2*S10+1]=[READY_LIST+32*pid+15+2*S10+1];
		S12=[freePCB+15+2*S10];
		if(S12>=0 && S12<64) then
			[FILE_TABLE+2*S12+1]=[FILE_TABLE+2*S12+1]+1;
		endif;
		S10=S10+1;
	endwhile;
	
	[freePCB+1]=1;
	
	
	[physicalSP-2]=[freePCB];
	
	alias child_physicalSP S11;
	child_physicalSP=[child_PTBR+2*(SP-1)/512]*512+(SP-1)%512;
	[child_physicalSP-1]=-2;
	//breakpoint;
	ireturn;
endif;
