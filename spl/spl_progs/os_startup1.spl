load(7,1);
load(8,2);
load(23,17);
load(24,18);
[READY_LIST + 0]=0;
load(25,21);
load(26,22);
load(27,23);
PTBR=1024;
PTLR=4;
[PTBR+0]=25;
[PTBR+1]="01";
[PTBR+2]=26;
[PTBR+3]="01";
[PTBR+4]=27;
[PTBR+5]="01";
[PTBR+6]=28;
[PTBR+7]="01";
[READY_LIST+1]=2;
SP=3*512;
[28*512]=0;

load(9,3);
load(10,4);

[READY_LIST +32]=1;
load(29,25);
alias PTBR_process1 S0;
PTBR_process1=1024+8;
[PTBR_process1 + 0] = 29; 
[PTBR_process1 + 1] = "01";
[PTBR_process1 + 2] = -1; 
[PTBR_process1 + 3] = "00";
[PTBR_process1 + 4] = -1;
[PTBR_process1 + 5] = "00";
[PTBR_process1 + 6] = 30;
[PTBR_process1 + 7] = "01";
[READY_LIST+33]=1;
[READY_LIST + 37] = PTBR_process1; // PTBR
[READY_LIST + 38] = 4; // PTLR 
[READY_LIST + 34] = 3 * 512; // Sets the entry for BP in the PCB
[READY_LIST + 35] = 3 * 512; // Sets the entry for SP in the PCB 
[READY_LIST + 36] = 0;

//3rd process

//[READY_LIST +2*32]=2;
//load(31,31);
//alias PTBR_process2 S1;
//PTBR_process2=1024+2*8;
//[PTBR_process2 + 0] = 31; 
//[PTBR_process2 + 1] = "01";
//[PTBR_process2 + 2] = -1; 
//[PTBR_process2 + 3] = "00";
//[PTBR_process2 + 4] = -1;
//[PTBR_process2 + 5] = "00";
//[PTBR_process2 + 6] = 32;
//[PTBR_process2 + 7] = "01";
//[READY_LIST+65]=1;
//[READY_LIST +(2*32)+5] = //PTBR_process2; // PTBR
//[READY_LIST +(2*32)+6] = 4; // //PTLR 
//[READY_LIST +(2*32)+2 ] = 3 * 512; // Sets the entry for BP in the PCB
//[READY_LIST +(2*32)+3] = 3 * 512; // Sets the entry for SP in the PCB 
//[READY_LIST +(2*32)+4] = 0;

ireturn;
