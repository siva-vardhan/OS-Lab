//loading exception handler
load(7,1);
load(8,2);
//loading interrupt 7
load(23,17);
load(24,18);
//setting pid as 0 //the first process in PCB
[READY_LIST + 0]=0;
//loading code from init block to memory
load(25,21);
load(26,22);
load(27,23);
//
//setting PTBR to start address of page table
PTBR=1024;
PTLR=4;

//setting page table to 3 code and 1 stack pages
//"01" refers to unreferenced and valid
[PTBR+0]=25;
[PTBR+1]="01";
[PTBR+2]=26;
[PTBR+3]="01";
[PTBR+4]=27;
[PTBR+5]="01";
[PTBR+6]=28;
[PTBR+7]="01";

//setting 0th process as running
[READY_LIST+1]=2;
//setting stack pointer to initial address of stack(logical address)
SP=3*512;

//loading timer interrrupt routine
load(9,3);
load(10,4);

//setting ip(first location in stack) to 0
[28*512]=0;
//loading int1
load(11,5);
load(12,6);

load(5,19); //fat
load(6,20); //dfl

//setting systemwideopenfiletable
alias counter S0;
counter=0;
while(counter<64) do 
    [FILE_TABLE + counter*2 + 0] = -1;     //pointer to FAT
    [FILE_TABLE + counter*2 + 1] = 0;      //openFileCount
    counter = counter + 1;
endwhile;

//setting perprocessopenfiletable for init
counter=0;
while(counter<8) do 
    [READY_LIST + 15 + counter*2 + 0] = -1;            //pointer to system wide open file table
    [READY_LIST + 15 + counter*2 + 1] = -1;            //LSEEK position
    counter = counter + 1;
endwhile;

//loading int1
load(13,7);
load(14,8);

//loading int2
load(15,9);
load(16,10);

//loading int3
load(17,11);
load(18,12);

//loading int4
load(19,13);
load(20,14);

//loading int5
load(21,15);
load(22,16);

//loading int6
load(23,17);
load(24,18);


//setting memory free list
counter=0;
while(counter<64) do
	if(counter<=28) then
		[1280+counter]=1;
	else
		[1280+counter]=0;
	endif;
	counter=counter+1;
endwhile;



//setting PCB state as 0 to all other process in readylist
counter=1;
while(counter<32) do
	[READY_LIST+32*counter+1]=0;	
	counter=counter+1;
endwhile;

//setting swap area blocks as 0 in dfl in memory and updating it to dfl in disk
counter=448;
while(counter<512) do
	[6*512+counter]=0;
	counter=counter+1;
endwhile;
store(6,20);


[READY_LIST+31]=0;   //ppid of init
breakpoint;
ireturn;
